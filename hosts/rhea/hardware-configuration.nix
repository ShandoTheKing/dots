# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [
    "nvme"
    "ehci_pci"
    "xhci_pci"
    "usb_storage"
    "sd_mod"
    "rtsx_pci_sdmmc"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "amd-gpu" "kvm-amd" ];
  boot.extraModulePackages = [ ];
  boot.loader.grub.enable = true;
  boot.loader.grub.device = "nodev";
  boot.loader.grub.efiSupport = true;
  boot.loader.efi.efiSysMountPoint = "/boot/efi";
  boot.loader.efi.canTouchEfiVariables = true;
boot.loader.grub.extraEntries = ''
        menuentry 'Windows Boot Manager (on /dev/nvme0n1p1)' --class windows --class os $menuentry_id_option 'osprober-efi-1502-E6F5' {
        insmod part_gpt
        insmod fat
        search --no-floppy --fs-uuid --set=root 1502-E6F5
        chainloader /EFI/Microsoft/Boot/bootmgfw.efi
        }
        menuentry 'Fedora Linux 41 (Workstation Edition) (on /dev/nvme0n1p3)' --class fedora --class gnu-linux --class gnu --class os $menuentry_id_option 'osprober-gnulinux-simple-c5da5d36-2c15-41f8-9684-562dab8f0890' {
        insmod part_gpt
        insmod ext2
        search --no-floppy --fs-uuid --set=root c5da5d36-2c15-41f8-9684-562dab8f0890
        linux /boot/vmlinuz-6.8.5-301.fc40.x86_64 root=/dev/nvme0n1p3
        initrd /boot/initramfs-6.8.5-301.fc40.x86_64.img
        }
        submenu 'Advanced options for Fedora Linux 41 (Workstation Edition) (on /dev/nvme0n1p3)' $menuentry_id_option 'osprober-gnulinux-advanced-c5da5d36-2c15-41f8-9684-562dab8f0890' {
        menuentry 'Fedora Linux 41 (Workstation Edition) (on /dev/nvme0n1p3)' --class gnu-linux --class gnu --class os $menuentry_id_option 'osprober-gnulinux-/boot/vmlinuz-6.8.5-301.fc40.x86_64--c5da5d36-2c15-41f8-9684-562dab8f0890' {
                insmod part_gpt
                insmod ext2
                search --no-floppy --fs-uuid --set=root c5da5d36-2c15-41f8-9684-562dab8f0890
                linux /boot/vmlinuz-6.8.5-301.fc40.x86_64 root=/dev/nvme0n1p3
                initrd /boot/initramfs-6.8.5-301.fc40.x86_64.img
        }
        }   
  '';

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/3701f922-a1a3-430e-a414-c8d6840968c7";
    fsType = "ext4";
  };

  fileSystems."/boot/efi" = {
    device = "/dev/disk/by-uuid/1502-E6F5";
    fsType = "vfat";
    options = [
      "fmask=0077"
      "dmask=0077"
    ];
  };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp2s0f0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp5s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp3s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
